{"scoring":null,"notes":"","legend":"The King of Byteland has decided to divide the country into provinces, one for each of his children.\r\n\r\nThe map of Byteland is a rectangular matrix consisting of $n$ rows and $m$ columns. Each king's child has a castle, located in one of the cells of the matrix (each cell contains at most one castle). King wants to split the Byteland in the following way:\r\n\\begin{itemize}\r\n\\item Each province must be a rectangle.\r\n\\item Each cell of the Byteland territory must belong to exactly one province.\r\n\\item Each province must contain the castle of exactly one king's child, the owner of this province.\r\n\\end{itemize}\r\n\r\nThe king loves all his children, but one of them is his favorite. The king wants to split the kingdom in such a way that the area of the province that belongs to his favorite child is as large as possible. Can you help him to solve this tricky task?","authorLogin":"kgeorgiy","language":"english","timeLimit":2000,"output":"Output the same matrix, replacing each character `\\t{.}' with the lowercase letter, corresponding to the owner of the province containing this cell.","inputFile":"stdin","outputFile":"stdout","input":"The first line of the input contains two integers $n$ and $m$ ($1\\le n, m\\le 1000$). The following $n$ lines contain $m$ characters each. Each character represents one cell of the matrix. Character  `\\t{.}' represents an empty cell, uppercase letters from `\\t{A}' to `\\t{Z}' represent the castles. Letter `\\t{A}' corresponds to the castle of the king's favorite child. \r\n\r\nAll letters are different. There is exactly one letter `\\t{A}'.","authorName":"Georgiy Korneev","sampleTests":[{"output":"xxxxxxXx\r\nfFaaaaaa\r\nffaAaaaa\r\nffaaaaaa\r\nlllllPpp\r\nllLllppp\r\n","input":"6 8\r\n......X.\r\n.F......\r\n...A....\r\n........\r\n.....P..\r\n..L.....\r\n","inputFile":"example.01","outputFile":"example.01.a"}],"name":"King's Children","interaction":null,"memoryLimit":536870912,"tutorial":"{\r\n    \\parindent=1cm\r\n    \\begin{tabular}{l@{\\extracolsep{1cm}}l}\r\n         Idea: & Pavel Mavrin\\\\\r\n         Statement: & Pavel Mavrin\\\\\r\n         Checker: & Pavel Mavrin\\\\\r\n         Tests: & Pavel Mavrin\\\\\r\n     \\end{tabular}\r\n}\r\n\r\nFirst of all, you should notice that a solution always exists, that is, you can always split a rectangle into rectangles so that each rectangle contains exactly one of the marked cells. First expand each marked cell to a vertical segment, then expand each segment to a rectangle. It's easy to see that all cells will be covered by the rectangles. \r\n\r\nNow we need to maximize the area of rectangle A. Let's find the rectangle of the maximal area that contains cell A, and doesn't contain any other marked cell. This is a standard problem that can be solved in $O(nm)$ time. \r\n\r\nNow, let's prove that all remaining cells can be divided into proper rectangles. Let's split re remaining area into four big rectangles. Each rectangle is either empty or contains at least one marked cell (if not, we can expand the rectangle A), now use the solution described above to divide each of big rectangles. \r\n\r\nThe total time complexity is $O(nm)$.\r\n\r\n{\r\n    \\parindent=1cm\r\n    \\begin{tabular}{l@{\\extracolsep{1cm}}l}\r\n         Идея задачи: & Павел Маврин\\\\\r\n         Условие: & Павел Маврин\\\\\r\n         Проверяющая программа: & Павел Маврин\\\\\r\n         Тесты: & Павел Маврин\\\\\r\n     \\end{tabular}\r\n}\r\n\r\nЗаметим, что если не требуется максимизировать площадь прямоугольника `\\t{A}', то задачу можно решить следующим образом. Растянем каждую букву по вертикали, пока она не упрется в другую букву или край королевства. Таким образом, получится набор полных столбцов. Растянем каждый столбец по горизонтали, пока он не упрется в соседний или край королевства. Таким образом, королевство будет разбито на прямоугольные регионы.\r\n\r\nНаучимся максимизировать прямоугольник `\\t{A}'. Для этого найдем прямоугольник максимальной площади, содержащий букву `\\t{A}', и не содержащий других букв. Это стандартная задача, которая решается за время $O(nm)$. Докажем, что оставшуюся часть королевства можно разбить на прямоугольники требуемым образом. Разобьем её на четыре больших прямоугольника: выше прямоугольника `\\t{A}', ниже его, слева и справа. Каждый из больших прямоугольников либо пуст, либо содержит хотя бы одну букву (в противном случае, мы бы могли увеличить прямоугольника `\\t{A}' в соответствующую сторону). Решив задачу без максимизации для каждого большого прямоугольника, мы разобьем все королевство на прямоугольники. Таким образом, общее время решения задачи $O(nm)$.\r\n"}